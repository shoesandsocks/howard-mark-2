{"version":3,"sources":["containers/Plugin/hc wp plugin ss.png","components/Titlebar/index.js","utils/palette.js","components/SpeechControls/index.js","components/OtherControls/index.js","components/Chatbox/Timestamp.js","components/Chatbox/index.js","components/Overlay/index.js","utils/localsearch.js","containers/ChatWithHoward/index.js","containers/About/index.js","containers/Plugin/index.js","components/EditorOverlay/index.js","components/ScheduleForm/index.js","containers/MembersOnly/index.js","components/LoginPage/index.js","components/Navicon/index.js","components/Header/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Bar","styled","div","Name","p","Titlebar","title","orange","SlideOpen","keyframes","SlideOpenSmall","ControlsForm","form","BtnWrap","AllowBtn","button","ControlLabel","label","ControlRow","Slider","input","Value","VoiceSelect","select","SpeechControls","rate","change","voice","voices","pitch","approvedToSpeak","approve","open","onClick","htmlFor","onChange","type","min","max","value","step","id","name","style","justifyContent","map","v","idx","key","lang","OtherControlsForm","Checkbox","OtherControls","skipit","markov","handleCheckbox","handleSkipCheckbox","checked","Greyspan","Timestamp","time","Box","ChatLineWrapper","ChatBubbleAndTimetamp","props","align","Chat","bg","Text","NewText","Chatbox","handleSubmit","handleChange","newtext","convo","keywatch","onSubmit","color","onKeyUp","slice","reverse","c","i","user","text","warning","renderConvo","OverlayDiv","Button","buttonColor","Overlay","overlayContainer","document","createElement","body","appendChild","removeChild","this","ReactDOM","createPortal","children","onClose","buttonName","React","Component","defaultProps","getQ","get","then","val","array","Math","floor","random","length","catch","url","AppWrap","ChatWithHoward","state","conversation","history","historyIndex","hasError","e","preventDefault","setState","target","a","newHistory","unshift","concat","Date","toString","split","speak","queryHoward","reply","Array","isArray","rnd","singleton","response","getVoices","argument","kindd","kind","params","URLSearchParams","append","axios","post","console","log","data","newIndexItem","close","allVoices","speechSynthesis","forEach","index","match","push","error","info","currentVoice","msg","SpeechSynthesisUtterance","AboutWrap","Big","About","href","PluginWrap","Pre","pre","Plugin","src","ss","alt","OverlayForm","Input","Select","CloseButton","EditorOverlay","editChannelName","editCron","editJobName","handleDelete","originalName","handleEditChange","channels","adding","closeWithNoAction","xmlns","width","height","viewBox","fill","d","placeholder","channel","FormWrap","TableTitle","Table","table","THead","thead","TableRs","tr","TableHs","th","TableDs","td","AddBtn","ScheduleForm","overlayIsOpen","originalCron","handleOpenEditor","job","cronSked","channelName","jobName","addNewJob","cronServerRequest","closeOverlay","potentialJob","Object","values","sort","setTimeout","renderJobs","userCronJobs","isFormLoading","message","MembersOnlyWrap","StatusBar","BarSpan","span","Break","margin","UpdateBtn","UpdateText","h3","Ul","ul","MembersOnly","getHowardSettings","isLoading","headers","token","sessionStorage","getItem","status","mouthiness","hushed","getCoreUpdate","coreupdate","dirty","clearDirty","action","jobOrName","uri","payload","tumblr_id","jwtDecode","newJob","jobsAndChannels","usersJobs","activeCronJobs","depQuotes","newQuotes","layout","JSON","stringify","PureComponent","LoginWrap","window","location","protocol","host","replace","link","LoginPage","marginTop","srcSet","Btn","Navicon","toggleMenu","HeaderWrap","Header","avi","variants","hidden","x","visible","Page","Menu","MenuBtn","active","Logout","App","menuIsOpen","CurrentComponent","setUser","option","checkForUser","exp","isAuthed","handleLogout","setItem","changeComponent","string","URL","search","replaceState","pathname","position","display","initial","animate","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","set","howard","render","getElementById","process","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.dace8cc1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hc wp plugin ss.646f4942.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Bar = styled.div`\n  width: 100%;\n  color: white;\n  text-align: center;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 300;\n  font-size: 2em;\n  transition: all 0.3s;\n  @media (max-width: 600px) {\n    font-size: 1.5em;\n    padding: 0.5em;\n  }\n`;\nconst Name = styled.p`\n  padding: 0;\n  margin: 0;\n  letter-spacing: 5px;\n`;\n\nconst Titlebar = ({ title }) => (\n  <Bar>\n    <Name>{title}</Name>\n  </Bar>\n);\n\nTitlebar.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Titlebar;\n","export const darkBlue = '#434d5a';\nexport const orange = '#FFB300';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { keyframes } from 'styled-components';\n\nimport { darkBlue, orange } from '../../utils/palette';\n\nconst SlideOpen = keyframes`\n  0% {\n    height: 60px;\n    opacity: 0;\n    }\n  100% {\n    height: 200px;\n    opacity: 1;\n  }\n`;\nconst SlideOpenSmall = keyframes`\n  0% {\n    height: 60px;\n    opacity: 0;\n    }\n  100% {\n    height: 100px;\n    opacity: 1;\n  }\n`;\nconst ControlsForm = styled.form`\n  width: 100%;\n  max-width: 1000px;\n  height: 200px;\n  text-align: center;\n  transition: all 0.3s;\n  animation: ${SlideOpen} 0.5s ease-in-out 0s;\n  @media (max-width: 600px) {\n    height: 100px;\n    animation: ${SlideOpenSmall} 0.5s ease-in-out 0s;\n  }\n`;\n// same style but div not form\nconst BtnWrap = styled.div`\n  width: 100%;\n  max-width: 1000px;\n  height: 60px;\n  text-align: center;\n  transition: all 0.3s;\n  @media (max-width: 600px) {\n    height: 0px;\n  }\n`;\n\nconst AllowBtn = styled.button`\n  border: 1px solid #eee;\n  border-radius: 4px;\n  padding: 1em;\n  margin-top: 1em;\n  background: transparent;\n  color: white;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 300;\n  cursor: pointer;\n  transition: all 0.3s;\n  &:hover {\n    background: white;\n    color: ${darkBlue};\n  }\n`;\n\nconst ControlLabel = styled.label`\n  height: 50px;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n  align-items: center;\n  color: white;\n  font-family: 'Roboto', sans-serif;\n  font-size: 0.8em;\n`;\n\nconst ControlRow = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Slider = styled.input`\n  width: 80%;\n  outline: none;\n  padding: 0;\n  margin: 0;\n  -webkit-appearance: none;\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    width: 4em;\n    height: 4em;\n    margin-top: -16px;\n    border-radius: 50%;\n    background: white;\n    border: 8px solid ${orange};\n    cursor: pointer;\n    transition: 0.2s;\n    &:hover {\n      background: ${orange};\n    }\n  }\n  &::-webkit-slider-runnable-track {\n    -webkit-appearance: none;\n    width: 98%;\n    height: 1em;\n    background: white;\n    border-radius: 50%;\n  }\n  &::-moz-range-thumb {\n    width: 3em;\n    height: 3em;\n    border-radius: 50%;\n    border: 8px solid ${orange};\n    transition: 0.2s;\n    &:hover {\n      background: ${orange};\n    }\n  }\n  &::-moz-range-track {\n    width: 100%;\n    height: 1em;\n    background: white;\n    border: none;\n    border-radius: 8px;\n  }\n`;\n\nconst Value = styled.p`\n  width: 20px;\n`;\n\nconst VoiceSelect = styled.select`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  width: 200px;\n  margin: 50px;\n  width: 150px;\n  padding: 5px 35px 5px 5px;\n  font-size: 1em;\n  color: white;\n  background: transparent;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  height: 34px;\n`;\n\nconst SpeechControls = ({\n  rate, change, voice, voices, pitch, approvedToSpeak, approve,\n}) => {\n  const renderOptions = vx =>\n    vx.map(v => (\n      <option name={v.name} value={v.idx} key={v.idx}>\n        {v.name} - {v.lang}\n      </option>\n    ));\n\n  if (!approvedToSpeak) {\n    return (\n      <BtnWrap>\n        <AllowBtn onClick={approve}>allow speech</AllowBtn>\n      </BtnWrap>\n    );\n  }\n  return (\n    <ControlsForm open={approvedToSpeak}>\n      {approvedToSpeak && <AllowBtn onClick={approve}>cancel speech</AllowBtn>}\n      <ControlLabel htmlFor=\"rate\">\n        <Value>Rate</Value>\n        <Slider\n          onChange={change}\n          type=\"range\"\n          min=\"0.5\"\n          max=\"2\"\n          value={rate}\n          step=\"0.1\"\n          id=\"rate\"\n          name=\"rate\"\n        />\n        <Value>{rate}</Value>\n      </ControlLabel>\n\n      <ControlLabel htmlFor=\"pitch\">\n        <Value>Pitch</Value>\n        <Slider\n          onChange={change}\n          type=\"range\"\n          min=\"0\"\n          max=\"2\"\n          value={pitch}\n          step=\"0.1\"\n          id=\"pitch\"\n          name=\"pitch\"\n        />\n        <Value>{pitch}</Value>\n      </ControlLabel>\n\n      <ControlRow>\n        {/* this row-wrap currently unnec */}\n        <ControlLabel style={{ justifyContent: 'flex-start' }} htmlFor=\"voice\">\n          <Value>Voice</Value>\n          <VoiceSelect name=\"voice\" id=\"voice\" value={voice} onChange={change}>\n            {renderOptions(voices)}\n          </VoiceSelect>\n        </ControlLabel>\n      </ControlRow>\n    </ControlsForm>\n  );\n};\n\nSpeechControls.propTypes = {\n  rate: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired,\n  approve: PropTypes.func.isRequired,\n  voice: PropTypes.string.isRequired,\n  voices: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    lang: PropTypes.string,\n    idx: PropTypes.number,\n  })).isRequired,\n  pitch: PropTypes.string.isRequired,\n  approvedToSpeak: PropTypes.bool.isRequired,\n};\n\nexport default SpeechControls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { orange } from '../../utils/palette';\n\nconst OtherControlsForm = styled.form`\n  padding: 0.5em;\n  width: 100%;\n  max-width: 1000px;\n  height: 20px;\n  text-align: center;\n  transition: all 0.3s;\n  @media (max-width: 600px) {\n    margin-top: 5em;\n  }\n`;\n\nconst ControlRow = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  align-items: center;\n  @media (max-width: 600px) {\n    /* flex-flow: column wrap;\n    justify-content: flex-start;\n    align-items: flex-end; */\n  }\n`;\n\nconst ControlLabel = styled.label`\n  height: 50px;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n  align-items: center;\n  color: white;\n  font-family: 'Roboto', sans-serif;\n  font-size: 0.8em;\n`;\n\nconst Checkbox = styled.input`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  height: 2em;\n  width: 2em;\n  margin-left: 0.25em;\n  background: white;\n  border: 3px solid ${orange};\n  border-radius: 50%;\n  &:checked {\n    background: ${orange};\n  }\n`;\n\nconst OtherControls = ({\n  skipit, markov, handleCheckbox, handleSkipCheckbox, approvedToSpeak,\n}) => (\n  <OtherControlsForm>\n    <ControlRow>\n      <ControlLabel>\n        Markov?\n        <Checkbox\n          type=\"checkbox\"\n          checked={markov}\n          id=\"markov\"\n          name=\"markov\"\n          onClick={handleCheckbox}\n        />\n      </ControlLabel>\n\n      {approvedToSpeak && (\n        <ControlLabel>\n          Forget Howard:\n          <Checkbox\n            type=\"checkbox\"\n            checked={skipit}\n            id=\"skipit\"\n            name=\"skipit\"\n            onClick={handleSkipCheckbox}\n          />\n        </ControlLabel>\n      )}\n    </ControlRow>\n  </OtherControlsForm>\n);\n\nOtherControls.propTypes = {\n  handleSkipCheckbox: PropTypes.func.isRequired,\n  handleCheckbox: PropTypes.func.isRequired,\n  markov: PropTypes.bool.isRequired,\n  skipit: PropTypes.bool.isRequired,\n  approvedToSpeak: PropTypes.bool.isRequired,\n};\n\nexport default OtherControls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Greyspan = styled.p`\n  color: grey;\n  margin: 0 6px;\n  padding: 0;\n  font: small-caps 0.65em 'Open Sans', sans-serif;\n  align-self: flex-end;\n`;\n\nconst Timestamp = ({ time }) => <Greyspan>{time}</Greyspan>;\n\nTimestamp.propTypes = {\n  time: PropTypes.string.isRequired,\n};\nexport default Timestamp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Timestamp from './Timestamp';\n\nimport { orange } from '../../utils/palette';\n\nconst Box = styled.form`\n  margin: 1em 0;\n  padding: 8px 0 0 4px;\n  width: 100%;\n  max-width: 1000px;\n  border: 4px solid white;\n  height: 400px;\n  background: black;\n  overflow: scroll;\n  &::-webkit-scrollbar {\n    width: 0px;\n    background: transparent;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: ${orange};\n  }\n  /* apparently there's no moz equivalent, so it just sucks a little on FF */\n`;\n\nconst ChatLineWrapper = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: flex-start;\n  align-items: flex-end;\n`;\n\nconst ChatBubbleAndTimetamp = styled.div`\n  width: 100%;\n  min-height: 30px;\n  margin-top: 0.125em;\n  margin-bottom: 0.125em;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: ${props => props.align};\n`;\n\nconst Chat = styled.div`\n  max-width: 60%;\n  border-radius: 7px;\n  background-color: ${props => props.bg};\n  @media (max-width: 600px) {\n    max-width: 70%;\n  }\n`;\n\nconst Text = styled.p`\n  padding: 0.25em;\n  margin: 0;\n  color: white;\n  font-size: 1.25em;\n  font-family: 'Inconsolata', serif;\n  overflow-wrap: break-word;\n`;\n\nconst NewText = styled.input`\n  width: 95%;\n  background: black;\n  color: white;\n  border: none;\n  font-size: 1.25em;\n  height: 1.5em;\n  font-family: 'Inconsolata', serif;\n  cursor: pointer;\n  outline: none;\n  padding-left: 4px;\n  @media (max-width: 600px) {\n    width: 90%;\n  }\n`;\n\nconst renderConvo = (convo) => {\n  const clone = convo.slice(0).reverse();\n  return clone.map((c, i) => (\n    <ChatLineWrapper key={i}>\n      <ChatBubbleAndTimetamp align={c.user ? 'flex-start' : 'flex-end'}>\n        {c.user && <Timestamp time={c.time} />}\n        <Chat key={`${c}`} bg={c.user ? '#FFA500' : '#aaa'}>\n          <Text>{c.text}</Text>\n        </Chat>\n        {!c.user && <Timestamp time={c.time} />}\n      </ChatBubbleAndTimetamp>\n      {!c.user && c.warning && <Timestamp time={c.warning} />}\n    </ChatLineWrapper>\n  ));\n};\n\nconst Chatbox = ({\n  handleSubmit, handleChange, newtext, convo, keywatch,\n}) => (\n  <Box onSubmit={handleSubmit}>\n    <label style={{ color: 'white' }} htmlFor=\"newtext\">\n      &gt;\n      <NewText\n        onKeyUp={keywatch}\n        type=\"text\"\n        name=\"newtext\"\n        id=\"newtext\"\n        value={newtext}\n        onChange={handleChange}\n      />\n    </label>\n    {renderConvo(convo)}\n  </Box>\n);\n\nChatbox.propTypes = {\n  convo: PropTypes.array.isRequired, // eslint-disable-line\n  newtext: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  keywatch: PropTypes.func.isRequired,\n};\n\nexport default Chatbox;\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst OverlayDiv = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  width: 400px;\n  height: 300px;\n  margin-left: -200px;\n  margin-top: -150px;\n  background-color: #fff;\n  text-align: center;\n  outline: 9999px solid rgba(0, 0, 0, 0.5);\n`;\n\nconst Button = styled.button`\n  background: ${props => props.buttonColor};\n  color: white;\n  font-size: 1em;\n  padding: 0.5em 1em;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n`;\n\n// https://egghead.io/lessons/react-render-elements-outside-the-current-react-tree-using-portals-in-react-16\n\nclass Overlay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.overlayContainer = document.createElement('div');\n    document.body.appendChild(this.overlayContainer);\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.overlayContainer);\n  }\n\n  render() {\n    return ReactDOM.createPortal(\n      <OverlayDiv>\n        {this.props.children}\n        <Button buttonColor={this.props.buttonColor} onClick={this.props.onClose}>\n          {this.props.buttonName}\n        </Button>\n      </OverlayDiv>,\n      this.overlayContainer,\n    );\n  }\n}\n\nOverlay.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  buttonName: PropTypes.string,\n  buttonColor: PropTypes.string,\n};\n\nOverlay.defaultProps = {\n  buttonName: 'Refresh',\n  buttonColor: 'crimson',\n};\n\nexport default Overlay;\n","import { get } from 'idb-keyval';\n\nconst rnd = array => Math.floor(Math.random() * array.length);\n\nconst getQ = () =>\n  get('quotes')\n    .then(val => val[rnd(val)].text)\n    .catch(() => ['Howard daid.']);\n\nexport default getQ;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nimport Titlebar from '../../components/Titlebar';\nimport SpeechControls from '../../components/SpeechControls';\nimport OtherControls from '../../components/OtherControls';\nimport Chatbox from '../../components/Chatbox';\nimport Overlay from '../../components/Overlay';\n\nimport { darkBlue } from '../../utils/palette';\nimport getQ from '../../utils/localsearch';\n\nconst url = 'https://howardchicken.online/howard';\n// const url =\n//   process.env.NODE_ENV === 'production'\n//     ? 'https://howardchicken.herokuapp.com/howard' // N.B. not original, with hyphen\n//     : 'http://localhost:3001/howard';\n// currently failing experiment @ 'https://www.pineandvine.com/rich-text/.netlify/functions/howard'\n\nconst AppWrap = styled.div`\n  height: 92vh;\n  padding-top: 4em;\n  background: ${darkBlue};\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  transition: all 0.3s;\n  @media (max-width: 600px) {\n    padding: 1em;\n  }\n`;\n\nclass ChatWithHoward extends Component {\n  state = {\n    approvedToSpeak: false,\n    voices: [],\n    voice: '0',\n    pitch: '1',\n    rate: '1',\n    newtext: '',\n    conversation: [],\n    history: [],\n    markov: false,\n    skipit: false,\n    historyIndex: -1,\n    warning: null,\n    hasError: false,\n  };\n\n  componentDidMount() {\n    if (this.state.voices.length === 0) {\n      this.getVoices();\n    }\n  }\n\n  getVoices() {\n    const allVoices = speechSynthesis.getVoices(); // eslint-disable-line\n    const voices = [];\n    allVoices.forEach((v, index) => {\n      if (!v.lang.match(/en/)) return null;\n      return voices.push({\n        name: v.name,\n        lang: v.lang,\n        idx: index,\n      });\n    });\n    this.setState({ voices });\n  }\n\n  componentDidCatch(error, info) {\n    console.log(error); // eslint-disable-line\n    console.log(info); // eslint-disable-line\n    this.setState(state => ({ ...state, hasError: true }));\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    return this.setState({ [e.target.name]: e.target.value });\n  };\n  handleCheckbox = () => {\n    this.setState({ markov: !this.state.markov });\n  };\n  handleSkipCheckbox = () => {\n    this.setState({ skipit: !this.state.skipit });\n  };\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const { newtext, history } = this.state;\n    if (!newtext || newtext === '') return null;\n\n    const newHistory = history.slice(0); // new clone, to mutate...\n    newHistory.unshift(newtext);\n\n    this.setState({\n      newtext: '',\n      history: newHistory,\n      historyIndex: -1,\n      conversation: this.state.conversation.concat([\n        { text: newtext, time: new Date().toString().split(' ')[4], user: true },\n      ]),\n    });\n    if (this.state.skipit) {\n      return this.speak(newtext);\n    }\n    const reply = await this.queryHoward(newtext);\n    let text = null;\n    let warning = null;\n    try {\n      if (Array.isArray(reply) && reply.length > 0) {\n        const rnd = Math.floor(Math.random() * reply.length);\n        text = reply[rnd].text; // eslint-disable-line\n      } else if (Array.isArray(reply) && reply.length === 0) {\n        // text = 'Sorry.';\n        const singleton = await this.queryHoward(1, 3);\n        text = singleton[0].text; // eslint-disable-line\n      } else {\n        text = reply.text; // eslint-disable-line\n      }\n    } catch (er) {\n      text = await getQ().then(response => response);\n      warning = 'Howard might be offline. This is a random result.';\n    }\n    if (this.state.approvedToSpeak) {\n      this.speak(text);\n    }\n    return this.setState({\n      conversation: this.state.conversation.concat([\n        { text, warning, time: new Date().toString().split(' ')[4] },\n      ]),\n    });\n  };\n\n  approve = () => {\n    if (this.state.approvedToSpeak) return this.setState({ approvedToSpeak: false, skipit: false });\n    this.speak('oh kay');\n    this.setState({ approvedToSpeak: true });\n    this.getVoices(); // I think this is needed for Chrome to be able to populate list?\n    return this.speak('hello');\n  };\n\n  speak(text) {\n    const allVoices = speechSynthesis.getVoices(); // eslint-disable-line\n    let currentVoice = this.state.voice;\n    if (this.state.voice === '0') {\n      if (this.state.voices.length === 0) return null;\n      currentVoice = this.state.voices[0].idx;\n    }\n    const msg = new SpeechSynthesisUtterance(text); // eslint-disable-line\n    msg.rate = this.state.rate;\n    msg.pitch = this.state.pitch;\n    msg.voice = allVoices[currentVoice];\n    return speechSynthesis.speak(msg); // eslint-disable-line\n  }\n\n  /**\n   * `argument` and `kindd`:\n   * pass a number as arg and 1 as kindd, get that numbered ep\n   * pass anything as arg and 2 as kindd, get a random ep\n   * pass a number as arg and 3 as kindd, get that many random `text` quotes in an array\n   * pass some text as arg an 4 as kindd, get back any matching `text` quotes in arr (or empty arr)\n   * pass some text as arg an 5 as kindd, get 'markov'-type gibberish\n   */\n  queryHoward = (argument, kindd = null) => {\n    const kind = kindd || (this.state.markov ? 5 : 4);\n    const params = new URLSearchParams(); // eslint-disable-line\n    params.append('kind', kind);\n    params.append('argument', argument);\n    return axios\n      .post(url, params)\n      .then((response) => {\n        console.log(response.data.response); // eslint-disable-line\n        return response.data.response;\n      })\n      .catch(e => console.log(e)); // eslint-disable-line\n  };\n\n  keywatch = (e) => {\n    if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n      const { history, historyIndex } = this.state;\n      const move = e.key === 'ArrowUp' ? 1 : -1;\n      const newIndexItem = historyIndex + move;\n      if (newIndexItem < 0 || newIndexItem > history.length - 1) return null;\n      return this.setState({ newtext: history[newIndexItem], historyIndex: newIndexItem });\n    }\n    return null;\n  };\n\n  close = () => this.setState({ hasError: false });\n\n  render() {\n    const {\n      approvedToSpeak,\n      voices,\n      voice,\n      pitch,\n      rate,\n      conversation,\n      newtext,\n      markov,\n      skipit,\n      warning,\n      hasError,\n    } = this.state;\n    if (hasError) {\n      return (\n        <Overlay onClose={this.close}>\n          <p>\n            something went terribly wrong. This error was thrown by React&apos;s componentDidCatch\n            method (That&apos;s bad.)\n          </p>\n        </Overlay>\n      );\n    }\n    return (\n      <AppWrap>\n        <Titlebar title=\"Chat with Howard\" />\n        <SpeechControls\n          approvedToSpeak={approvedToSpeak}\n          voices={voices}\n          voice={voice}\n          pitch={pitch}\n          rate={rate}\n          change={this.handleChange}\n          approve={this.approve}\n        />\n        <OtherControls\n          approvedToSpeak={approvedToSpeak}\n          skipit={skipit}\n          markov={markov}\n          approve={this.approve}\n          handleSkipCheckbox={this.handleSkipCheckbox}\n          handleCheckbox={this.handleCheckbox}\n        />\n        <Chatbox\n          convo={conversation}\n          newtext={newtext}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n          keywatch={this.keywatch}\n          warning={warning}\n        />\n      </AppWrap>\n    );\n  }\n}\n\nChatWithHoward.propTypes = {};\n\nexport default ChatWithHoward;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { darkBlue, orange } from '../../utils/palette';\n\nconst AboutWrap = styled.div`\n  height: 92vh;\n  padding-top: 4em;\n  background: ${darkBlue};\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  transition: all 0.3s;\n`;\n\nconst Text = styled.p`\n  color: white;\n  font-family: 'Inconsolata', sans-serif;\n  font-size: 1.25em;\n  margin: 0;\n`;\n\nconst Big = styled.a`\n  color: white;\n  font-family: 'Inconsolata', sans-serif;\n  margin: 1em 0 0 0;\n  font-size: 2em;\n  text-decoration-color: ${orange};\n  transition: all 0.25s;\n  &:hover {\n    color: ${orange};\n  }\n`;\n\nconst About = () => (\n  <AboutWrap>\n    <Text>Chat With Howard is</Text>\n    <Text>inspired by, and </Text>\n    <Text>fed with data from</Text>\n    <Big href=\"http://www.howardchicken.com\">howardchicken.com</Big>\n  </AboutWrap>\n);\n\nexport default About;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { darkBlue, orange } from '../../utils/palette';\nimport ss from './hc wp plugin ss.png';\n\nconst pastedCode = `\n<?php\n/**\n* @package Howard_Chicken\n* @version 1.0\n*/\n/*\nPlugin Name: Howard Chicken\nPlugin URI: http://howardchicken.herokuapp.com/plugin\nDescription: A modification of the Hello Dolly plugin featuring content\nfrom the Back to Work podcast. Show material artisanally harvested by\nMatt Keller. Subscribe to the show at http://5by5.tv/b2w/\nAuthor: RL Brown\nVersion: 1.0\nAuthor URI: https://www.pineandvine.com\n*/\n\nfunction howard_chicken_get_quote() {\n  $url = 'https://howardchicken.online/howard';\n  $response = wp_safe_remote_post(  $url, $args = array(\n    'method'      => 'POST',\n    'timeout'     => 45,\n    'redirection' => 5,\n    'httpversion' => '1.0',\n    'blocking'    => true,\n    'headers'     => array(),\n    'body'        => array(\n        'kind' => 3,\n        'argument' => 1\n    ),\n    'cookies'     => array()\n    )\n  );\n  if ( is_wp_error( $response ) ) {\n    $error_message = $response->get_error_message();\n    echo \"Something went wrong: $error_message\";\n} else {\n    $api_response = json_decode( wp_remote_retrieve_body( $response ), true );\n    return $api_response['response'][0]['text'];\n  }\n}\n\n// This just echoes the chosen line, we'll position it later\nfunction howard_chicken() {\n  $chosen = howard_chicken_get_quote();\n  echo \"<p id='howard'>🐔 $chosen 🐔</p>\";\n}\n\n// Now we set that function up to execute when the admin_notices action is called\nadd_action( 'admin_notices', 'howard_chicken' );\n\n// We need some CSS to position the paragraph\nfunction howard_css() {\n  // This makes sure that the positioning is also good for right-to-left languages\n  $x = is_rtl() ? 'left' : 'right';\n\n  echo \"\n  <style type='text/css'>\n  #howard {\n    float: $x;\n    padding-$x: 15px;\n    padding-top: 5px;\n    margin: 0;\n    font-size: 15px;\n  }\n  </style>\n  \";\n}\n\nadd_action( 'admin_head', 'howard_css' );\n?>\n`;\nconst PluginWrap = styled.div`\n  /* height: 92vh; */\n  padding-top: 4em;\n  background: ${darkBlue};\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  transition: all 0.3s;\n`;\n\nconst Text = styled.p`\n  color: white;\n  font-family: 'Inconsolata', sans-serif;\n  font-size: 1.25em;\n  margin: 0;\n  max-width: 600px;\n  padding: 2rem 0 4rem;\n`;\nconst Pre = styled.pre`\n  width: 800px;\n  color: white;\n  & code {\n    max-width: 800px;\n  }\n  border: 2px solid white;\n`;\n\nconst Big = styled.a`\n  color: white;\n  font-family: 'Inconsolata', sans-serif;\n  margin: 1em 0 0 0;\n  font-size: 2em;\n  text-decoration-color: ${orange};\n  transition: all 0.25s;\n  &:hover {\n    color: ${orange};\n  }\n`;\n\nconst Plugin = () => (\n  <PluginWrap>\n    <Big>Howard - the WordPress plugin</Big>\n    <Text>\n      If you&apos;ve used Wordpress and are familiar with the built-in\n      Hello Dolly plugin, you&apos;ll have some idea of what the Howard Chicken\n      Wordpress plugin does.\n    </Text>\n    <img src={ss} alt=\"decoration\" />\n    <Text>\n      At the moment the plugin is still unpublished, but you can build it yourself.\n      In your active WordPress theme, go to the /plugins subfolder and make a new folder\n      called `howard-chicken`. In that subfolder, create a text file called\n      `howard-chicken.php`. Paste the following into that .php file:\n    </Text>\n    <Pre>\n      <code>\n        {pastedCode}\n      </code>\n    </Pre>\n    <Text>\n      That&apos;s it! You might need a README.txt in that subfolder too but that&apos;s easy.\n      In your Dashboard, you should have a new plugin available...\n    </Text>\n  </PluginWrap>\n);\n\nexport default Plugin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { orange } from '../../utils/palette';\n\nconst OverlayForm = styled.form`\n  height: 80%;\n  width: 100%;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`;\n\nconst Input = styled.input`\n  margin: 0.25em;\n  width: 80%;\n  font: 1.125em 'Inconsolata', sans-serif;\n`;\nconst Select = styled.select`\n  margin: 0.25em;\n  width: 80%;\n  font: 1.125em 'Inconsolata', sans-serif;\n`;\n\nconst Button = styled.button`\n  background: ${props => props.buttonColor};\n  color: white;\n  font-size: 1em;\n  padding: 0.5em 1em;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  margin: 1em;\n`;\nconst CloseButton = styled.button`\n  align-self: flex-end;\n  background: transparent;\n  border: none;\n  position: absolute;\n  top: 0;\n  cursor: pointer;\n`;\n\nconst EditorOverlay = ({\n  editChannelName,\n  editCron,\n  editJobName,\n  handleDelete,\n  originalName,\n  handleEditChange,\n  channels,\n  adding,\n  closeWithNoAction,\n}) => {\n  const renderOptions = array =>\n    array.map(channel => (\n      <option value={channel.name} key={channel.id}>\n        {channel.name}\n      </option>\n    ));\n\n  return (\n    <OverlayForm onSubmit={null}>\n      {adding && <p>Add new job...</p>}\n      {!adding && <p>Edit this job, or</p>}\n      <Button buttonColor=\"crimson\" onClick={() => handleDelete(originalName)}>\n        {adding ? 'Close' : 'Delete'}\n      </Button>\n      <CloseButton onClick={closeWithNoAction}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n          <path\n            fill={orange}\n            d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n          />\n        </svg>\n      </CloseButton>\n      <Input\n        type=\"text\"\n        name=\"editJobName\"\n        id=\"editJobName\"\n        placeholder=\"job name\"\n        value={editJobName}\n        onChange={handleEditChange}\n      />\n      <Input\n        type=\"text\"\n        name=\"editCron\"\n        id=\"editCron\"\n        placeholder=\"cron value\"\n        value={editCron}\n        onChange={handleEditChange}\n      />\n      <Select\n        name=\"editChannelName\"\n        id=\"editChannelName\"\n        value={editChannelName}\n        onChange={handleEditChange}\n      >\n        {channels.length > 0 && renderOptions(channels)}\n      </Select>\n    </OverlayForm>\n  );\n};\n\nEditorOverlay.propTypes = {\n  editChannelName: PropTypes.string.isRequired,\n  channels: PropTypes.arrayOf(PropTypes.object).isRequired, // TODO: beef up?\n  editCron: PropTypes.string.isRequired,\n  editJobName: PropTypes.string.isRequired,\n  originalName: PropTypes.string.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  handleEditChange: PropTypes.func.isRequired,\n  closeWithNoAction: PropTypes.func.isRequired,\n  adding: PropTypes.bool.isRequired,\n};\n\nexport default EditorOverlay;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Overlay from '../Overlay';\nimport EditorOverlay from '../EditorOverlay';\n\nimport { darkBlue, orange } from '../../utils/palette';\n\nconst FormWrap = styled.div`\n  width: 67%;\n  padding: 1em;\n  min-height: 20em;\n  background: ${darkBlue};\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  @media (max-width: 600px) {\n    width: 85%;\n  }\n`;\nconst TableTitle = styled.p`\n  font: 1em 'Roboto', sans-serif;\n  align-self: flex-start;\n`;\n\nconst Table = styled.table`\n  font-family: 'Inconsolata', sans-serif;\n  width: 100%;\n  text-align: left;\n  border-collapse: collapse;\n  border-bottom: 1px solid #ddd;\n  @media (max-width: 600px) {\n  }\n`;\nconst THead = styled.thead`\n  display: table-header-group;\n  vertical-align: middle;\n  border-color: inherit;\n`;\n\nconst TableRs = styled.tr`\n  display: table-row;\n  vertical-align: inherit;\n  border-bottom: 1px solid #ddd;\n  border-color: inherit;\n  &:hover {\n    & > td {\n      background: #b9c9fe;\n    }\n  }\n`;\n\nconst TableHs = styled.th`\n  font-size: 24px;\n  font-weight: normal;\n  background: #b9c9fe;\n  border-top: 4px solid #aabcfe;\n  border-bottom: 1px solid white;\n  color: #039;\n  padding: 8px;\n  &:first-child {\n    width: 40%;\n  }\n  &:nth-child(2) {\n    width: 28%;\n  }\n  @media (max-width: 600px) {\n    font-size: 16px;\n  }\n`;\n\nconst TableDs = styled.td`\n  background: #e8edff;\n  border-bottom: 1px solid white;\n  color: #669;\n  border-top: 1px solid transparent;\n  padding: 8px;\n  overflow: hidden;\n  transition: all 0.3s;\n  &:first-child {\n    width: 40%;\n  }\n  &:nth-child(2) {\n    width: 25%;\n  }\n  @media (max-width: 600px) {\n    font-size: 14px;\n  }\n`;\n\nconst AddBtn = styled.button`\n  border: 1px solid #eee;\n  border-radius: 4px;\n  padding: 1em 2em;\n  margin-top: 1em;\n  background: transparent;\n  color: white;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 300;\n  cursor: pointer;\n  transition: all 0.3s;\n  &:hover {\n    background: white;\n    color: ${darkBlue};\n  }\n`;\n\nclass ScheduleForm extends Component {\n  state = {\n    overlayIsOpen: false,\n    originalCron: {},\n    editCron: '',\n    editChannelName: ' - Select One - ',\n    editJobName: '',\n    adding: false,\n  };\n  handleOpenEditor = (job) => {\n    this.setState({\n      overlayIsOpen: true,\n      originalCron: job,\n      editCron: job.cronSked,\n      editChannelName: job.channelName,\n      editJobName: job.jobName,\n    });\n  };\n\n  addNewJob = () => {\n    this.setState({\n      overlayIsOpen: true,\n      adding: true,\n    });\n  };\n\n  closeWithNoAction = (e) => {\n    if (e) e.preventDefault();\n    return this.setState({\n      overlayIsOpen: false,\n      editCron: '',\n      editJobName: '',\n      editChannelName: ' - Select One - ',\n      originalCron: {},\n      adding: false,\n    });\n  };\n\n  handleEditChange = (e) => {\n    e.preventDefault();\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleDelete = (jobName) => {\n    this.props.cronServerRequest('delete', jobName);\n    this.closeWithNoAction();\n  };\n\n  closeOverlay = () => {\n    if (this.state.editChannelName === ' - Select One - ') {\n      console.log('pick a real channel'); // eslint-disable-line\n      return null;\n    }\n    const potentialJob = {\n      jobName: this.state.editJobName,\n      channelName: this.state.editChannelName,\n      cronSked: this.state.editCron,\n    };\n    if (this.state.adding) {\n      this.props.cronServerRequest('add', potentialJob);\n    } else if (\n      Object.values(potentialJob).sort() !== Object.values(this.state.originalCron).sort()\n    ) {\n      this.props.cronServerRequest('delete', this.state.originalCron.jobName);\n      setTimeout(() => {\n        this.props.cronServerRequest('add', potentialJob);\n      }, 500);\n    }\n    return this.closeWithNoAction();\n  };\n\n  renderJobs = array =>\n    array.map(job => (\n      <TableRs key={job.jobName} onClick={() => this.handleOpenEditor(job)}>\n        <TableDs>{job.jobName}</TableDs>\n        <TableDs>{job.cronSked}</TableDs>\n        <TableDs>{job.channelName}</TableDs>\n      </TableRs>\n    ));\n\n  render() {\n    const {\n      userCronJobs, isFormLoading, message, channels,\n    } = this.props;\n    if (isFormLoading) {\n      return (\n        <FormWrap>\n          loading...\n          {message && <span>...but something went wrong: {message}</span>}\n        </FormWrap>\n      );\n    }\n    if (this.state.overlayIsOpen) {\n      const {\n        editCron, editJobName, editChannelName, adding, originalCron,\n      } = this.state;\n      return (\n        <Overlay onClose={this.closeOverlay} buttonName=\"Save\" buttonColor={orange}>\n          <EditorOverlay\n            adding={adding}\n            channels={channels}\n            editCron={editCron}\n            editJobName={editJobName}\n            editChannelName={editChannelName}\n            originalName={adding ? {} : originalCron.jobName}\n            handleDelete={this.handleDelete}\n            handleEditChange={this.handleEditChange}\n            closeWithNoAction={this.closeWithNoAction}\n          />\n        </Overlay>\n      );\n    }\n    return (\n      <FormWrap>\n        <TableTitle>You have {userCronJobs.length} jobs. Tap to edit or delete.</TableTitle>\n        <Table>\n          <THead>\n            <TableRs>\n              <TableHs>Job</TableHs>\n              <TableHs>Schedule</TableHs>\n              <TableHs>Channel</TableHs>\n            </TableRs>\n          </THead>\n          <tbody>{this.renderJobs(userCronJobs)}</tbody>\n        </Table>\n        <AddBtn onClick={this.addNewJob}>Add</AddBtn>\n      </FormWrap>\n    );\n  }\n}\n\nScheduleForm.propTypes = {\n  channels: PropTypes.array.isRequired, // eslint-disable-line\n  cronServerRequest: PropTypes.func.isRequired,\n  userCronJobs: PropTypes.object.isRequired, // eslint-disable-line\n  isFormLoading: PropTypes.bool.isRequired,\n  message: PropTypes.string.isRequired,\n};\n\nexport default ScheduleForm;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n\nimport ScheduleForm from '../../components/ScheduleForm';\n\nimport { darkBlue } from '../../utils/palette';\n\nconst MembersOnlyWrap = styled.div`\n  height: 92vh;\n  padding-top: 4em;\n  background: ${darkBlue};\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  transition: all 0.3s;\n  & p {\n    color: white;\n  }\n  @media (max-width: 600px) {\n    /* hi */\n  }\n`;\nconst StatusBar = styled.div`\n  height: 2em;\n  width: 67%;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-around;\n  align-items: center;\n  @media (max-width: 600px) {\n    width: 85%;\n  }\n`;\n\nconst BarSpan = styled.span`\n  margin: 0 0.5em;\n  color: white;\n  font: 1em 'Inconsolata', sans-serif;\n  @media (max-width: 600px) {\n    margin: 0.25em;\n    font-size: 0.8em;\n  }\n`;\n\nconst Break = styled.div`\n  background: white;\n  height: 2px;\n  width: 85%;\n  margin: ${props => (props.margin ? props.margin : '2em 0')};\n`;\n\nconst UpdateBtn = styled.button`\n  border: none;\n  background: orange;\n  padding: 1em 0.75em;\n  color: white;\n  cursor: pointer;\n`;\n\nconst UpdateText = styled.h3`\n  color: white;\n`;\n\nconst Ul = styled.ul`\n  list-style-type: none;\n  padding-left: 0px;\n  text-align: left;\n  font-size: 0.75em;\n  margin: 1em 0em 1em 0em;\n`;\n\nclass MembersOnly extends React.PureComponent {\n  // TODO: testing here\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: '',\n      mouthiness: '',\n      hushed: '',\n      isLoading: false,\n      error: '',\n      userCronJobs: [],\n      channels: [],\n      coreupdate: {\n        depQuotes: [],\n        newQuotes: [],\n      },\n      dirty: false,\n      // DEV\n      // userCronJobs: [\n      //   {\n      //     jobName: 'x',\n      //     channelName: 'y',\n      //     cronSked: '*/4 * * * *',\n      //   },\n      // ],\n      // channels: [\n      //   {\n      //     name: 'y',\n      //     id: '123',\n      //   },\n      //   {\n      //     name: 'x',\n      //     id: '1323',\n      //   },\n      //   {\n      //     name: 'z',\n      //     id: '123r3',\n      //   },\n      // ],\n      isFormLoading: false,\n      message: null,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.status === '') {\n      this.getHowardSettings(); // DEV\n      this.cronServerRequest();\n    }\n  }\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   console.log('sCU in MembersOnly is running');\n  //   if (this.props === nextProps) return false;\n  //   return true;\n  // }\n\n  getHowardSettings = () => {\n    this.setState({ isLoading: true });\n    axios\n      .get('/howardsettings', {\n        headers: {\n          token: sessionStorage.getItem('token'), // eslint-disable-line\n        },\n      })\n      .then((response) => {\n        this.setState({\n          status: response.data.status,\n          mouthiness: response.data.mouthiness,\n          hushed: response.data.hushed,\n          isLoading: false,\n        });\n      })\n      .catch((e) => {\n        this.setState({ error: e });\n      });\n  };\n\n  getCoreUpdate = () => {\n    const token = sessionStorage.getItem('token'); // eslint-disable-line\n    axios.get('/howardupdate', { headers: { token } }).then((response) => {\n      this.setState({ coreupdate: response.data, dirty: true });\n    });\n  }\n  clearDirty = () => this.setState({ coreupdate: {}, dirty: false })\n\n  cronServerRequest = (action, jobOrName) => {\n    const token = sessionStorage.getItem('token'); // eslint-disable-line\n    const { tumblr_id } = jwtDecode(token);\n    let uri;\n    let payload;\n    if (action === 'delete') {\n      uri = '/howardcron/kill';\n      payload = { tumblr_id, jobName: jobOrName };\n    } else if (action === 'add') {\n      uri = '/howardcron/add';\n      payload = { tumblr_id, newJob: jobOrName };\n    } else {\n      uri = '/howardcron';\n      payload = { tumblr_id };\n    }\n    this.setState({ isFormLoading: true, message: null });\n    return axios\n      .post(uri, payload, { headers: { token } })\n      .then((response) => {\n        const { usersJobs, channels } = response.data.jobsAndChannels;\n        const { message } = response.data;\n        console.log('Server response message (okay if undef): ', message); // eslint-disable-line\n        this.setState({\n          userCronJobs: usersJobs[0].activeCronJobs,\n          channels,\n          isFormLoading: false,\n        });\n      })\n      .catch((e) => {\n        console.log('something went wrong interacting w server: ', e); // eslint-disable-line\n        this.setState({ message: e });\n      });\n  };\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <MembersOnlyWrap>\n          <p>loading...</p>\n          {this.state.error !== '' && <p>...but something has gone wrong.</p>}\n        </MembersOnlyWrap>\n      );\n    }\n    const {\n      status,\n      mouthiness,\n      hushed,\n      userCronJobs,\n      channels,\n      isFormLoading,\n      message,\n      coreupdate,\n      dirty,\n    } = this.state;\n    const { depQuotes, newQuotes } = coreupdate;\n    const layout = array =>\n      array.map((a, i) => (\n        // eslint-disable-next-line\n        <li key={i}>\n          <code>{JSON.stringify(a)}</code>\n        </li>\n      ));\n    return (\n      <MembersOnlyWrap>\n        <Break margin=\".25em 0\" />\n        <StatusBar>\n          <BarSpan>Howard Status: {status ? 'on' : 'off'}</BarSpan>\n          <BarSpan>Mouthiness: {mouthiness}%</BarSpan>\n          <BarSpan>Hushed? {hushed ? 'yes' : 'no'}</BarSpan>\n        </StatusBar>\n        <Break margin=\".25em 0\" />\n        <Break />\n        <ScheduleForm\n          cronServerRequest={this.cronServerRequest}\n          channels={channels}\n          userCronJobs={userCronJobs}\n          isFormLoading={isFormLoading}\n          message={message}\n        />\n        <Break />\n        {!dirty && <UpdateBtn onClick={this.getCoreUpdate}>Check for Updates</UpdateBtn>}\n        {dirty && newQuotes.length > 0 && (\n          <div>\n            <UpdateText>new quotes</UpdateText>\n            <Ul>{layout(newQuotes)}</Ul>\n          </div>\n        )}\n        {dirty && newQuotes.length === 0 && (\n          <UpdateText>No new quotes found</UpdateText>\n        )}\n        <br />\n        {dirty && depQuotes.length > 0 && (\n          <div>\n            <UpdateText>deprecated quotes</UpdateText>\n            <Ul>{layout(depQuotes)}</Ul>\n          </div>\n        )}\n        {dirty && depQuotes.length === 0 && (\n          <UpdateText>Nothing deprecated</UpdateText>\n        )}\n        <br />\n        {dirty &&\n          <UpdateBtn onClick={this.clearDirty}>Okay...</UpdateBtn>\n        }\n      </MembersOnlyWrap>\n    );\n  }\n}\n\nMembersOnly.propTypes = {};\n\nexport default MembersOnly;\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport { darkBlue } from '../../utils/palette';\n\nconst LoginWrap = styled.div`\n  height: 99vh;\n  width: 100%;\n  padding-top: 3em;\n  background: ${darkBlue};\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n`;\n\nconst Text = styled.p`\n  font-size: 1rem;\n  color: white;\n`;\n\nlet uri = `${window.location.protocol}%2F%2F${window.location.host}%2Foauth`;\nuri = uri.replace(/:/g, '%3A');\n// const uri = 'https%3A%2F%2Fhowardchicken.herokuapp.com%2Foauth';\nconst cli = '11083475395.188120798310';\nconst scope = 'identity.basic,identity.avatar';\nconst link = `https://slack.com/oauth/authorize?scope=${scope}&client_id=${cli}&redirect_uri=${uri}`;\n\nconst LoginPage = () => (\n  <LoginWrap>\n    <Text>Sign in with your Tumblrrs Slack account</Text>\n    <a href={link}>\n      <img\n        style={{ marginTop: '1em' }}\n        alt=\"Sign in with Slack\"\n        height=\"40\"\n        width=\"172\"\n        src=\"https://platform.slack-edge.com/img/sign_in_with_slack.png\"\n        srcSet=\"https://platform.slack-edge.com/img/sign_in_with_slack.png 1x, https://platform.slack-edge.com/img/sign_in_with_slack@2x.png 2x\"\n      />\n    </a>\n  </LoginWrap>\n);\n\nexport default LoginPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Btn = styled.button`\n  border: none;\n  cursor: pointer;\n  background: #434d5a;\n  transition: all 0.3s;\n  & svg {\n    height: 3em;\n    width: 3em;\n    &:hover {\n      fill: orange;\n  }\n  }\n`;\n\nconst Navicon = ({ toggleMenu }) => (\n  <Btn onClick={toggleMenu}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"white\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n      <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" />\n    </svg>\n  </Btn>\n);\n\nNavicon.propTypes = { toggleMenu: PropTypes.func.isRequired };\n\n\nexport default Navicon;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport Navicon from '../Navicon';\n\nimport { darkBlue } from '../../utils/palette';\n\nconst HeaderWrap = styled.div`\n  background: ${darkBlue};\n  padding: 1em 0 0 3em;\n  display: flex;\n  align-items: center;\n  @media (max-width: 600px) {\n    padding: 1em;\n  }\n  & > span {\n    margin-left: 1em;\n    color: white;\n  }\n  & > img {\n    width: 3em;\n    height: 3em;\n    border-radius: 6px;\n    margin-left: 1em;\n  }\n`;\n\nconst Header = (props) => {\n  let name;\n  let avi;\n\n  if (!props.user) {\n    name = '';\n    avi = '';\n  } else {\n    name = props.user.name; // eslint-disable-line\n    avi = props.user.avi; // eslint-disable-line\n  }\n\n  return (\n    <HeaderWrap>\n      <Navicon toggleMenu={props.toggleMenu} />\n      {name && <span>{name}</span>}\n      {name && <img src={avi} alt=\"avatar\" />}\n    </HeaderWrap>\n  );\n};\n\nHeader.propTypes = {\n  toggleMenu: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    avi: PropTypes.string,\n  }),\n};\n\nHeader.defaultProps = {\n  user: {\n    name: '',\n    avi: '',\n  },\n};\n\nexport default Header;\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport styled from 'styled-components';\nimport jwtDecode from 'jwt-decode';\nimport { motion } from \"framer-motion\"\n\nimport ChatWithHoward from './containers/ChatWithHoward';\nimport About from './containers/About';\nimport Plugin from './containers/Plugin';\nimport MembersOnly from './containers/MembersOnly';\nimport LoginPage from './components/LoginPage';\nimport Header from './components/Header';\n\nimport { darkBlue, orange } from './utils/palette';\n\nconst variants = {\n  hidden: {\n    x: -100,\n  },\n  visible: {\n    x: 0,\n  }\n};\n\nconst Page = styled.div`\n  width: 98vw;\n  position: relative;\n`;\n\nconst Menu = styled.div`\n  position: relative;\n  height: 100%;\n  transition: all 0.4s;\n  background: white;\n  width: 100px;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: flex-start;\n  padding: 70px 0 0 0.25em;\n`;\n\nconst MenuBtn = styled.button`\n  border: none;\n  background: transparent;\n  font-size: 1em;\n  margin-top: 1em;\n  color: ${props => (props.active ? orange : darkBlue)};\n  cursor: pointer;\n  &:hover {\n      color: ${orange};\n    }\n`;\n\nconst Logout = styled.button`\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nclass App extends React.Component {\n  state = { user: null, menuIsOpen: false, CurrentComponent: ChatWithHoward };\n\n  componentDidMount() {\n    this.checkForUser();\n    if (this.state.user !== null) return false;\n    try {\n      const url = new URL(window.location);\n      const params = new URLSearchParams(url.search);\n      const token = params.get('token');\n      if (token && token !== null) {\n        this.setUser(jwtDecode(token), 'cdm');\n        sessionStorage.setItem('token', token);\n      }\n    } catch (e) {\n      console.log(\"Didn't see token.\", e); // eslint-disable-line\n    }\n    return window.history.replaceState(null, null, window.location.pathname);\n    // return this.checkForUser(); // DEV\n  }\n\n  setUser = (user, option) => {\n    if (option === 'cdm') {\n      return this.setState({ user, CurrentComponent: MembersOnly });\n    }\n    return this.setState({ user });\n  }\n\n  checkForUser = () => {\n    const token = sessionStorage.getItem('token');\n    if (token && token !== null) {\n      try {\n        let user = jwtDecode(token);\n        if (!user || !user.exp || user.exp < Math.floor(+new Date() / 1000)) {\n          user = null;\n        }\n        return this.setState({ user });\n      } catch (e) {\n        return console.log('catch in App cFU: ', e); // eslint-disable-line\n      }\n    }\n    return null;\n  };\n\n  isAuthed = () => { // DEV\n    const token = sessionStorage.getItem('token');\n    if (token && token !== null) {\n      try {\n        const user = jwtDecode(token);\n        // TODO: test whether this works -- expressly log out if user expired\n        if (user && user.exp < Math.floor(+new Date() / 1000)) {\n          this.handleLogout();\n        }\n        if (!user || !user.exp || user.exp < Math.floor(+new Date() / 1000)) {\n          return false;\n        }\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  handleLogout = () => {\n    sessionStorage.setItem('token', null);\n    this.setState({ user: null, CurrentComponent: ChatWithHoward });\n  };\n\n  toggleMenu = () => this.setState({ menuIsOpen: !this.state.menuIsOpen });\n\n  changeComponent = (string) => {\n    if (string === 'Home') return this.setState({ CurrentComponent: ChatWithHoward });\n    if (string === 'About') return this.setState({ CurrentComponent: About });\n    if (string === 'Plugin') return this.setState({ CurrentComponent: Plugin });\n    if (string === 'Login') return this.setState({ CurrentComponent: LoginPage });\n    if (string === 'Members') return this.setState({ CurrentComponent: MembersOnly });\n    return false;\n  }\n\n  render() {\n    const { user, CurrentComponent, menuIsOpen } = this.state;\n    console.log(menuIsOpen)\n    return (\n      <motion.div \n        style={{ position: \"absolute\", display: \"flex\"}}\n        initial=\"hidden\"\n        animate={menuIsOpen ? \"visible\" : \"hidden\"}\n        variants={variants}\n      >\n        <Menu>\n          <MenuBtn active={this.state.CurrentComponent === ChatWithHoward} onClick={() => this.changeComponent('Home')}>Home</MenuBtn>\n          <MenuBtn active={this.state.CurrentComponent === About} onClick={() => this.changeComponent('About')}>About</MenuBtn>\n          <MenuBtn active={this.state.CurrentComponent === Plugin} onClick={() => this.changeComponent('Plugin')}>Plugin</MenuBtn>\n          {!user && (\n          <MenuBtn active={this.state.CurrentComponent === LoginPage} onClick={() => this.changeComponent('Login')}>Login</MenuBtn>\n            )}\n          {user && (\n          <MenuBtn active={this.state.CurrentComponent === MembersOnly} onClick={() => this.changeComponent('Members')}>Members</MenuBtn>\n            )}\n          {user && (\n          <Logout onClick={this.handleLogout}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                fill={orange}\n                d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n              />\n            </svg>\n          </Logout>\n          )}\n        </Menu>\n        <Page>\n          <Header user={user} toggleMenu={this.toggleMenu} />\n          <CurrentComponent />\n        </Page>\n      </motion.div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { set } from 'idb-keyval';\n\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport howard from './data/howard.json';\n\nconst createDB = () => {\n  set('quotes', howard);\n};\n\ncreateDB();\n\nReactDOM.render(<App />, document.getElementById('root')); // eslint-disable-line\nregisterServiceWorker();\n"],"sourceRoot":""}